#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Alor API
"""

import os
import requests
from alor_api import AlorAPI

def check_token():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ HTTP API"""
    try:
        # –°–æ–∑–¥–∞–µ–º API –∫–ª–∏–µ–Ω—Ç
        alor = AlorAPI()
        print(f"‚úÖ –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω: {len(alor.token)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üîç –ü–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: {alor.token[:10]}...")
        print(f"üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: ...{alor.token[-10:]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —á–µ—Ä–µ–∑ HTTP API
        print("\nüì° –¢–µ—Å—Ç–∏—Ä—É—é HTTP API...")
        instruments = alor.load_instruments_list()
        if instruments:
            symbol = instruments[0]
            print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ {symbol}...")
            
            quote = alor.get_quote(symbol)
            if quote and 'error' not in quote:
                print(f"‚úÖ HTTP API —Ä–∞–±–æ—Ç–∞–µ—Ç! Bid: {quote.get('bid')}, Ask: {quote.get('ask')}")
                print("üí° –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–ª—è HTTP API")
                print("‚ö†Ô∏è  –ù–æ –¥–ª—è WebSocket –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è JWT —Ç–æ–∫–µ–Ω")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
                print(f"\nüîß –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: Authorization: Bearer {alor.token[:20]}...")
                
            else:
                print("‚ùå HTTP API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def check_token_format():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
        env_path = os.path.join(os.path.dirname(__file__), '.env')
        if os.path.exists(env_path):
            with open(env_path, 'r', encoding='utf-8') as f:
                for line in f:
                    line = line.strip()
                    if line.startswith('ALOR_API_TOKEN='):
                        token = line.split('=', 1)[1].strip()
                        
                        print(f"\nüîç –ê–ù–ê–õ–ò–ó –¢–û–ö–ï–ù–ê:")
                        print(f"–î–ª–∏–Ω–∞: {len(token)} —Å–∏–º–≤–æ–ª–æ–≤")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—Ö–æ–∂ –ª–∏ –Ω–∞ JWT
                        if '.' in token and token.count('.') >= 2:
                            print("üéØ –ü–æ—Ö–æ–∂ –Ω–∞ JWT —Ç–æ–∫–µ–Ω (—Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫–∏)")
                            parts = token.split('.')
                            print(f"   –ß–∞—Å—Ç–µ–π JWT: {len(parts)}")
                        else:
                            print("‚ö†Ô∏è  –ù–ï –ø–æ—Ö–æ–∂ –Ω–∞ JWT —Ç–æ–∫–µ–Ω (–Ω–µ—Ç —Ç–æ—á–µ–∫)")
                            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ API –∫–ª—é—á –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–≤–æ–ª—ã
                        if token.isalnum():
                            print("üî§ –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã")
                        else:
                            print("üî§ –°–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã")
                            
                        break
        else:
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–∫–µ–Ω–∞: {e}")

if __name__ == "__main__":
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê ALOR API")
    print("=" * 50)
    
    check_token_format()
    print("\n" + "=" * 50)
    check_token()
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ï—Å–ª–∏ HTTP API —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
    print("2. –î–ª—è WebSocket –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è JWT —Ç–æ–∫–µ–Ω")  
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é Alor –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é JWT —Ç–æ–∫–µ–Ω–∞")
    print("4. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å API –∫–ª—é—á –Ω–∞ JWT —Ç–æ–∫–µ–Ω")
