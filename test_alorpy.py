#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º AlorPy —Å –≤–∞—à–∏–º Refresh Token
"""

import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ AlorPy
sys.path.append(os.path.join(os.path.dirname(__file__), 'AlorPy'))

from AlorPy import AlorPy

def test_alorpy():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º AlorPy"""
    print("üß™ –¢–ï–°–¢ ALORPY –° –í–ê–®–ò–ú –¢–û–ö–ï–ù–û–ú")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
    env_path = os.path.join(os.path.dirname(__file__), '.env')
    refresh_token = None
    
    if os.path.exists(env_path):
        with open(env_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line.startswith('ALOR_API_TOKEN='):
                    refresh_token = line.split('=', 1)[1].strip().strip("'\"")
                    break
    
    if not refresh_token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    
    print(f"üìã –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω: {len(refresh_token)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üîç –¢–æ–∫–µ–Ω: {refresh_token[:20]}...{refresh_token[-10:]}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º AlorPy —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
        print("\nüîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ AlorPy...")
        ap = AlorPy(refresh_token=refresh_token)
        
        print("‚úÖ AlorPy –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìä JWT —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {len(ap.jwt_token) if ap.jwt_token else 0} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if ap.jwt_token:
            print(f"üîç JWT: {ap.jwt_token[:50]}...")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞–∫–∞–Ω–∞
            print("\nüìà –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞–∫–∞–Ω–∞ PDU5...")
            order_book = ap.get_order_book('MOEX', 'PDU5')
            
            if order_book and order_book.get('bids') and order_book.get('asks'):
                best_bid = order_book['bids'][0]
                best_ask = order_book['asks'][0]
                print(f"‚úÖ –°—Ç–∞–∫–∞–Ω –ø–æ–ª—É—á–µ–Ω!")
                print(f"   Best Bid: {best_bid['price']} (vol: {best_bid['volume']})")
                print(f"   Best Ask: {best_ask['price']} (vol: {best_ask['volume']})")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Å—Ç–∞–∫–∞–Ω
                print("\nüîî –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Å—Ç–∞–∫–∞–Ω (5 —Å–µ–∫—É–Ω–¥)...")
                
                def on_orderbook_change(response):
                    data = response.get('data', {})
                    if data.get('bids') and data.get('asks'):
                        bid = data['bids'][0]['price']
                        ask = data['asks'][0]['price']
                        print(f"üìä {datetime.now().strftime('%H:%M:%S.%f')[:-3]} - Bid: {bid}, Ask: {ask}")
                
                ap.on_change_order_book = on_orderbook_change
                
                from time import sleep
                from datetime import datetime
                
                guid = ap.order_book_get_and_subscribe('MOEX', 'PDU5')
                print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {guid}")
                
                sleep(5)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ real-time –¥–∞–Ω–Ω—ã—Ö
                
                ap.unsubscribe(guid)
                print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
                
                ap.close_web_socket()
                print("‚úÖ WebSocket –∑–∞–∫—Ä—ã—Ç")
                
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–∫–∞–Ω")
        else:
            print("‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO)
    test_alorpy()
